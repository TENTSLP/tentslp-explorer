/**
 * @license
 * https://github.com/bitcoincashjs/cashaddr
 * Copyright (c) 2017 Emilio Almansi
 * Distributed under the MIT software license, see the accompanying
 * file LICENSE or http://www.opensource.org/licenses/mit-license.php.
 */
!function(f){"object"==typeof exports&&"undefined"!=typeof module?module.exports=f():"function"==typeof define&&define.amd?define([],f):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).cashaddr=f()}(function(){return function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var p="function"==typeof require&&require;if(!f&&p)return p(i,!0);if(u)return u(i,!0);throw(p=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",p}p=n[i]={exports:{}},e[i][0].call(p.exports,function(r){return o(e[i][1][r]||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){var bigInt=function(){"use strict";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET="0123456789abcdefghijklmnopqrstuvwxyz",supportsNativeBigInt="function"==typeof BigInt;function Integer(v,radix,alphabet,caseSensitive){return void 0===v?Integer[0]:void 0!==radix&&(10!=+radix||alphabet)?parseBase(v,radix,alphabet,caseSensitive):parseValue(v)}function BigInteger(value,sign){this.value=value,this.sign=sign,this.isSmall=!1}function SmallInteger(value){this.value=value,this.sign=value<0,this.isSmall=!0}function NativeBigInt(value){this.value=value}function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){return n<1e7?[n]:n<1e14?[n%1e7,Math.floor(n/1e7)]:[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0)switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}return arr}function trim(v){for(var i=v.length;0===v[--i];);v.length=i+1}function createArray(length){for(var x=new Array(length),i=-1;++i<length;)x[i]=0;return x}function truncate(n){return 0<n?Math.floor(n):Math.ceil(n)}function add(a,b){for(var sum,l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,i=0;i<l_b;i++)carry=base<=(sum=a[i]+b[i]+carry)?1:0,r[i]=sum-carry*base;for(;i<l_a;)carry=(sum=a[i]+carry)===base?1:0,r[i++]=sum-carry*base;return 0<carry&&r.push(carry),r}function addAny(a,b){return a.length>=b.length?add(a,b):add(b,a)}function addSmall(a,carry){for(var sum,l=a.length,r=new Array(l),base=BASE,i=0;i<l;i++)sum=a[i]-base+carry,carry=Math.floor(sum/base),r[i]=sum-carry*base,carry+=1;for(;0<carry;)r[i++]=carry%base,carry=Math.floor(carry/base);return r}function subtract(a,b){for(var difference,a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i=0;i<b_l;i++)borrow=(difference=a[i]-borrow-b[i])<0?(difference+=base,1):0,r[i]=difference;for(i=b_l;i<a_l;i++){if(!((difference=a[i]-borrow)<0)){r[i++]=difference;break}difference+=base,r[i]=difference}for(;i<a_l;i++)r[i]=a[i];return trim(r),r}function subtractSmall(a,b,sign){for(var difference,l=a.length,r=new Array(l),carry=-b,base=BASE,i=0;i<l;i++)difference=a[i]+carry,carry=Math.floor(difference/base),difference%=base,r[i]=difference<0?difference+base:difference;return"number"==typeof(r=arrayToSmall(r))?new SmallInteger(r=sign?-r:r):new BigInteger(r,sign)}function multiplyLong(a,b){for(var product,carry,a_l=a.length,b_l=b.length,r=createArray(a_l+b_l),base=BASE,i=0;i<a_l;++i)for(var a_i=a[i],j=0;j<b_l;++j)product=a_i*b[j]+r[i+j],carry=Math.floor(product/base),r[i+j]=product-carry*base,r[i+j+1]+=carry;return trim(r),r}function multiplySmall(a,b){for(var product,l=a.length,r=new Array(l),base=BASE,carry=0,i=0;i<l;i++)product=a[i]*b+carry,carry=Math.floor(product/base),r[i]=product-carry*base;for(;0<carry;)r[i++]=carry%base,carry=Math.floor(carry/base);return r}function shiftLeft(x,n){for(var r=[];0<n--;)r.push(0);return r.concat(x)}function multiplySmallAndArray(a,b,sign){return new BigInteger(a<BASE?multiplySmall(b,a):multiplyLong(b,smallToArray(a)),sign)}function square(a){for(var product,l=a.length,r=createArray(l+l),base=BASE,i=0;i<l;i++){for(var a_i,carry=0-(a_i=a[i])*a_i,j=i;j<l;j++)product=a_i*a[j]*2+r[i+j]+carry,carry=Math.floor(product/base),r[i+j]=product-carry*base;r[i+l]=carry}return trim(r),r}function divModSmall(value,lambda){for(var q,length=value.length,quotient=createArray(length),base=BASE,remainder=0,i=length-1;0<=i;--i)remainder=(q=remainder*base+value[i])-(q=truncate(q/lambda))*lambda,quotient[i]=0|q;return[quotient,0|remainder]}function divModAny(mSign,remainder){var qSign=parseValue(remainder);if(supportsNativeBigInt)return[new NativeBigInt(mSign.value/qSign.value),new NativeBigInt(mSign.value%qSign.value)];var a=mSign.value,b=qSign.value;if(0===b)throw new Error("Cannot divide by zero");if(mSign.isSmall)return qSign.isSmall?[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]:[Integer[0],mSign];if(qSign.isSmall){if(1===b)return[mSign,Integer[0]];if(-1==b)return[mSign.negate(),Integer[0]];var comparison=Math.abs(b);if(comparison<BASE){var quotient=arrayToSmall((mod=divModSmall(a,comparison))[0]),remainder=mod[1];return mSign.sign&&(remainder=-remainder),"number"==typeof quotient?[new SmallInteger(quotient=mSign.sign!==qSign.sign?-quotient:quotient),new SmallInteger(remainder)]:[new BigInteger(quotient,mSign.sign!==qSign.sign),new SmallInteger(remainder)]}b=smallToArray(comparison)}comparison=compareAbs(a,b);if(-1===comparison)return[Integer[0],mSign];if(0===comparison)return[Integer[mSign.sign===qSign.sign?1:-1],Integer[0]];quotient=(mod=(a.length+b.length<=200?function(a,b){var quotientDigit,shift,carry,borrow,i,l,q,a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda);for(remainder.length<=a_l&&remainder.push(0),divisor.push(0),divisorMostSignificantDigit=divisor[b_l-1],shift=a_l-b_l;0<=shift;shift--){for(quotientDigit=base-1,remainder[shift+b_l]!==divisorMostSignificantDigit&&(quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)),borrow=carry=0,l=divisor.length,i=0;i<l;i++)carry+=quotientDigit*divisor[i],q=Math.floor(carry/base),borrow+=remainder[shift+i]-(carry-q*base),carry=q,borrow=borrow<0?(remainder[shift+i]=borrow+base,-1):(remainder[shift+i]=borrow,0);for(;0!==borrow;){for(--quotientDigit,i=carry=0;i<l;i++)carry=(carry+=remainder[shift+i]-base+divisor[i])<0?(remainder[shift+i]=carry+base,0):(remainder[shift+i]=carry,1);borrow+=carry}result[shift]=quotientDigit}return remainder=divModSmall(remainder,lambda)[0],[arrayToSmall(result),arrayToSmall(remainder)]}:function(a,b){for(var guess,xlen,highx,highy,check,a_l=a.length,b_l=b.length,result=[],part=[],base=BASE;a_l;)if(part.unshift(a[--a_l]),trim(part),compareAbs(part,b)<0)result.push(0);else{for(highx=part[(xlen=part.length)-1]*base+part[xlen-2],highy=b[b_l-1]*base+b[b_l-2],b_l<xlen&&(highx=(highx+1)*base),guess=Math.ceil(highx/highy);!(compareAbs(check=multiplySmall(b,guess),part)<=0)&&--guess;);result.push(guess),part=subtract(part,check)}return result.reverse(),[arrayToSmall(result),arrayToSmall(part)]})(a,b))[0];var qSign=mSign.sign!==qSign.sign,mod=mod[1],mSign=mSign.sign;return[quotient="number"==typeof quotient?new SmallInteger(quotient=qSign?-quotient:quotient):new BigInteger(quotient,qSign),mod="number"==typeof mod?new SmallInteger(mod=mSign?-mod:mod):new BigInteger(mod,mSign)]}function compareAbs(a,b){if(a.length!==b.length)return a.length>b.length?1:-1;for(var i=a.length-1;0<=i;i--)if(a[i]!==b[i])return a[i]>b[i]?1:-1;return 0}function isBasicPrime(n){n=n.abs();return!n.isUnit()&&(!!(n.equals(2)||n.equals(3)||n.equals(5))||!(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))&&(!!n.lesser(49)||void 0))}function millerRabinTest(n,a){for(var d,i,x,nPrev=n.prev(),b=nPrev,r=0;b.isEven();)b=b.divide(2),r++;next:for(i=0;i<a.length;i++)if(!n.lesser(a[i])&&!(x=bigInt(a[i]).modPow(b,n)).isUnit()&&!x.equals(nPrev)){for(d=r-1;0!=d;d--){if((x=x.square().mod(n)).isUnit())return!1;if(x.equals(nPrev))continue next}return!1}return!0}BigInteger.prototype=Object.create(Integer.prototype),SmallInteger.prototype=Object.create(Integer.prototype),NativeBigInt.prototype=Object.create(Integer.prototype),BigInteger.prototype.plus=BigInteger.prototype.add=function(b){var n=parseValue(b);if(this.sign!==n.sign)return this.subtract(n.negate());var a=this.value,b=n.value;return n.isSmall?new BigInteger(addSmall(a,Math.abs(b)),this.sign):new BigInteger(addAny(a,b),this.sign)},SmallInteger.prototype.plus=SmallInteger.prototype.add=function(b){var n=parseValue(b),a=this.value;if(a<0!==n.sign)return this.subtract(n.negate());b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)},NativeBigInt.prototype.plus=NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value)},BigInteger.prototype.minus=BigInteger.prototype.subtract=function(b){var n=parseValue(b);if(this.sign!==n.sign)return this.add(n.negate());var a=this.value,b=n.value;return n.isSmall?subtractSmall(a,Math.abs(b),this.sign):function(a,b,sign){var value;return 0<=compareAbs(a,b)?value=subtract(a,b):(value=subtract(b,a),sign=!sign),"number"==typeof(value=arrayToSmall(value))?new SmallInteger(value=sign?-value:value):new BigInteger(value,sign)}(a,b,this.sign)},SmallInteger.prototype.minus=SmallInteger.prototype.subtract=function(b){var n=parseValue(b),a=this.value;if(a<0!==n.sign)return this.add(n.negate());b=n.value;return n.isSmall?new SmallInteger(a-b):subtractSmall(b,Math.abs(a),0<=a)},NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value)},BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)},SmallInteger.prototype.negate=function(){var sign=this.sign,small=new SmallInteger(-this.value);return small.sign=!sign,small},NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)},BigInteger.prototype.abs=function(){return new BigInteger(this.value,!1)},SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))},NativeBigInt.prototype.abs=function(){return new NativeBigInt(0<=this.value?this.value:-this.value)},BigInteger.prototype.times=BigInteger.prototype.multiply=function(sign){var l2,l1=parseValue(sign),a=this.value,b=l1.value,sign=this.sign!==l1.sign;if(l1.isSmall){if(0===b)return Integer[0];if(1===b)return this;if(-1===b)return this.negate();if((l2=Math.abs(b))<BASE)return new BigInteger(multiplySmall(a,l2),sign);b=smallToArray(l2)}return l1=a.length,l2=b.length,new BigInteger((0<-.012*l1-.012*l2+15e-6*l1*l2?function multiplyKaratsuba(ac,bd){if((product=Math.max(ac.length,bd.length))<=30)return multiplyLong(ac,bd);var product=Math.ceil(product/2),b=ac.slice(product),a=ac.slice(0,product),abcd=bd.slice(product),c=bd.slice(0,product),ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,abcd),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,abcd)),product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),product)),shiftLeft(bd,2*product));return trim(product),product}:multiplyLong)(a,b),sign)},SmallInteger.prototype._multiplyBySmall=function(a){return isPrecise(a.value*this.value)?new SmallInteger(a.value*this.value):multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)},BigInteger.prototype._multiplyBySmall=function(a){return 0===a.value?Integer[0]:1===a.value?this:-1===a.value?this.negate():multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)},SmallInteger.prototype.times=SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)},NativeBigInt.prototype.times=NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value)},BigInteger.prototype.square=function(){return new BigInteger(square(this.value),!1)},SmallInteger.prototype.square=function(){var value=this.value*this.value;return isPrecise(value)?new SmallInteger(value):new BigInteger(square(smallToArray(Math.abs(this.value))),!1)},NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value)},NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod=function(result){result=divModAny(this,result);return{quotient:result[0],remainder:result[1]}},BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]},NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value)},SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide,BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]},NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value)},SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod,BigInteger.prototype.pow=function(a){var value,x,y,n=parseValue(a),a=this.value,b=n.value;if(0===b)return Integer[1];if(0===a)return Integer[0];if(1===a)return Integer[1];if(-1===a)return n.isEven()?Integer[1]:Integer[-1];if(n.sign)return Integer[0];if(!n.isSmall)throw new Error("The exponent "+n.toString()+" is too large.");if(this.isSmall&&isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value));for(x=this,y=Integer[1];!0&b&&(y=y.times(x),--b),0!==b;)b/=2,x=x.square();return y},SmallInteger.prototype.pow=BigInteger.prototype.pow,NativeBigInt.prototype.pow=function(a){var n=parseValue(a),a=this.value,b=n.value,_0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);for(var x=this,y=Integer[1];(b&_1)===_1&&(y=y.times(x),--b),b!==_0;)b/=_2,x=x.square();return y},NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow=function(exp,mod){if(exp=parseValue(exp),(mod=parseValue(mod)).isZero())throw new Error("Cannot take modPow with modulus 0");var r=Integer[1],base=this.mod(mod);for(exp.isNegative()&&(exp=exp.multiply(Integer[-1]),base=base.modInv(mod));exp.isPositive();){if(base.isZero())return Integer[0];exp.isOdd()&&(r=r.multiply(base).mod(mod)),exp=exp.divide(2),base=base.square().mod(mod)}return r},BigInteger.prototype.compareAbs=function(b){var n=parseValue(b),a=this.value,b=n.value;return n.isSmall?1:compareAbs(a,b)},SmallInteger.prototype.compareAbs=function(b){var n=parseValue(b),a=Math.abs(this.value),b=n.value;return n.isSmall?a===(b=Math.abs(b))?0:b<a?1:-1:-1},NativeBigInt.prototype.compareAbs=function(b){var a=this.value,b=parseValue(b).value;return(a=0<=a?a:-a)===(b=0<=b?b:-b)?0:b<a?1:-1},BigInteger.prototype.compareTo=BigInteger.prototype.compare=function(b){if(b===1/0)return-1;if(b===-1/0)return 1;var n=parseValue(b),a=this.value,b=n.value;return this.sign!==n.sign?n.sign?1:-1:n.isSmall?this.sign?-1:1:compareAbs(a,b)*(this.sign?-1:1)},SmallInteger.prototype.compareTo=SmallInteger.prototype.compare=function(b){if(b===1/0)return-1;if(b===-1/0)return 1;var n=parseValue(b),a=this.value,b=n.value;return n.isSmall?a==b?0:b<a?1:-1:a<0!==n.sign?a<0?-1:1:a<0?1:-1},NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare=function(b){if(b===1/0)return-1;if(b===-1/0)return 1;var a=this.value,b=parseValue(b).value;return a===b?0:b<a?1:-1},NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals=function(v){return 0===this.compare(v)},NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals=function(v){return 0!==this.compare(v)},NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater=function(v){return 0<this.compare(v)},NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser=function(v){return this.compare(v)<0},NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals=function(v){return 0<=this.compare(v)},NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0},BigInteger.prototype.isEven=function(){return 0==(1&this.value[0])},SmallInteger.prototype.isEven=function(){return 0==(1&this.value)},NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)},BigInteger.prototype.isOdd=function(){return 1==(1&this.value[0])},SmallInteger.prototype.isOdd=function(){return 1==(1&this.value)},NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)},BigInteger.prototype.isPositive=function(){return!this.sign},NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive=function(){return 0<this.value},BigInteger.prototype.isNegative=function(){return this.sign},NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative=function(){return this.value<0},BigInteger.prototype.isUnit=function(){return!1},SmallInteger.prototype.isUnit=function(){return 1===Math.abs(this.value)},NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)},BigInteger.prototype.isZero=function(){return!1},SmallInteger.prototype.isZero=function(){return 0===this.value},NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)},NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy=function(n){n=parseValue(n);return!n.isZero()&&(!!n.isUnit()||(0===n.compareAbs(2)?this.isEven():this.mod(n).isZero()))},NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime=function(strict){var logN=isBasicPrime(this);if(void 0!==logN)return logN;var n=this.abs(),logN=n.bitLength();if(logN<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);for(var logN=Math.log(2)*logN.toJSNumber(),t=Math.ceil(!0===strict?2*Math.pow(logN,2):logN),a=[],i=0;i<t;i++)a.push(bigInt(i+2));return millerRabinTest(n,a)},NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime=function(iterations,rng){var isPrime=isBasicPrime(this);if(void 0!==isPrime)return isPrime;for(var n=this.abs(),t=void 0===iterations?5:iterations,a=[],i=0;i<t;i++)a.push(bigInt.randBetween(2,n.minus(2),rng));return millerRabinTest(n,a)},NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv=function(n){for(var q,lastT,lastR,t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs();!newR.isZero();)q=r.divide(newR),lastT=t,lastR=r,t=newT,r=newR,newT=lastT.subtract(q.multiply(newT)),newR=lastR.subtract(q.multiply(newR));if(!r.isUnit())throw new Error(this.toString()+" and "+n.toString()+" are not co-prime");return-1===t.compare(0)&&(t=t.add(n)),this.isNegative()?t.negate():t},BigInteger.prototype.next=function(){var value=this.value;return this.sign?subtractSmall(value,1,this.sign):new BigInteger(addSmall(value,1),this.sign)},SmallInteger.prototype.next=function(){var value=this.value;return value+1<MAX_INT?new SmallInteger(value+1):new BigInteger(MAX_INT_ARR,!1)},NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))},BigInteger.prototype.prev=function(){var value=this.value;return this.sign?new BigInteger(addSmall(value,1),!0):subtractSmall(value,1,this.sign)},SmallInteger.prototype.prev=function(){var value=this.value;return-MAX_INT<value-1?new SmallInteger(value-1):new BigInteger(MAX_INT_ARR,!0)},NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};for(var powersOfTwo=[1];2*powersOfTwo[powersOfTwo.length-1]<=BASE;)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE}function bitwise(x,y,fn){y=parseValue(y);for(var xSign=x.isNegative(),ySign=y.isNegative(),xRem=xSign?x.not():x,yRem=ySign?y.not():y,xDigit=0,yDigit=0,xDivMod=null,yDivMod=null,result=[];!xRem.isZero()||!yRem.isZero();)xDigit=(xDivMod=divModAny(xRem,highestPower2))[1].toJSNumber(),xSign&&(xDigit=highestPower2-1-xDigit),yDigit=(yDivMod=divModAny(yRem,highestPower2))[1].toJSNumber(),ySign&&(yDigit=highestPower2-1-yDigit),xRem=xDivMod[0],yRem=yDivMod[0],result.push(fn(xDigit,yDigit));for(var sum=0!==fn(xSign?1:0,ySign?1:0)?bigInt(-1):bigInt(0),i=result.length-1;0<=i;--i)sum=sum.multiply(highestPower2).add(bigInt(result[i]));return sum}NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n))throw new Error(String(n)+" is too large for shifting.");if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;for(;powers2Length<=n;)result=result.multiply(highestPower2),n-=powers2Length-1;return result.multiply(powersOfTwo[n])},NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight=function(v){var remQuo,n=parseValue(v).toJSNumber();if(!shift_isSmall(n))throw new Error(String(n)+" is too large for shifting.");if(n<0)return this.shiftLeft(-n);for(var result=this;powers2Length<=n;){if(result.isZero()||result.isNegative()&&result.isUnit())return result;result=(remQuo=divModAny(result,highestPower2))[1].isNegative()?remQuo[0].prev():remQuo[0],n-=powers2Length-1}return(remQuo=divModAny(result,powersOfTwo[n]))[1].isNegative()?remQuo[0].prev():remQuo[0]},NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not=function(){return this.negate().prev()},NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})},NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})},NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(x){x=x.value,x="number"==typeof x?x|LOBMASK_I:"bigint"==typeof x?x|BigInt(LOBMASK_I):x[0]+x[1]*BASE|LOBMASK_BI;return x&-x}function max(a,b){return a=parseValue(a),b=parseValue(b),a.greater(b)?a:b}function min(a,b){return a=parseValue(a),b=parseValue(b),a.lesser(b)?a:b}function gcd(a,b){if(a=parseValue(a).abs(),b=parseValue(b).abs(),a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;for(var d,t,c=Integer[1];a.isEven()&&b.isEven();)d=min(roughLOB(a),roughLOB(b)),a=a.divide(d),b=b.divide(d),c=c.multiply(d);for(;a.isEven();)a=a.divide(roughLOB(a));do{for(;b.isEven();)b=b.divide(roughLOB(b))}while(a.greater(b)&&(t=b,b=a,a=t),!(b=b.subtract(a)).isZero());return c.isUnit()?a:a.multiply(c)}NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength=function(){var n=this;return 0===(n=n.compareTo(bigInt(0))<0?n.negate().subtract(bigInt(1)):n).compareTo(bigInt(0))?bigInt(0):bigInt(function integerLogarithm(value,t){if(t.compareTo(value)<=0){var e=integerLogarithm(value,t.square(t)),p=e.p,e=e.e,t=p.multiply(t);return t.compareTo(value)<=0?{p:t,e:2*e+1}:{p:p,e:2*e}}return{p:bigInt(1),e:0}}(n,bigInt(2)).e).add(bigInt(1))};var parseBase=function(text,base,alphabet,isNegative){alphabet=alphabet||DEFAULT_ALPHABET,text=String(text),isNegative||(text=text.toLowerCase(),alphabet=alphabet.toLowerCase());for(var length=text.length,absBase=Math.abs(base),alphabetValues={},i=0;i<alphabet.length;i++)alphabetValues[alphabet[i]]=i;for(i=0;i<length;i++){var c=text[i];if("-"!==c&&(c in alphabetValues&&alphabetValues[c]>=absBase&&("1"!==c||1!==absBase)))throw new Error(c+" is not a valid digit in base "+base+".")}base=parseValue(base);var digits=[],isNegative="-"===text[0];for(i=isNegative?1:0;i<text.length;i++)if((c=text[i])in alphabetValues)digits.push(parseValue(alphabetValues[c]));else{if("<"!==c)throw new Error(c+" is not a valid character");for(var start=i;i++,">"!==text[i]&&i<text.length;);digits.push(parseValue(text.slice(start+1,i)))}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){for(var val=Integer[0],pow=Integer[1],i=digits.length-1;0<=i;i--)val=val.add(digits[i].times(pow)),pow=pow.times(base);return isNegative?val.negate():val}function toBase(n,base){if((base=bigInt(base)).isZero()){if(n.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:!1};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var neg=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);return neg.unshift([1]),{value:[].concat.apply([],neg),isNegative:!1}}neg=!1;if(n.isNegative()&&base.isPositive()&&(neg=!0,n=n.abs()),base.isUnit())return n.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg};for(var out=[],left=n;left.isNegative()||0<=left.compareAbs(base);){var left=(digit=left.divmod(base)).quotient,digit=digit.remainder;digit.isNegative()&&(digit=base.minus(digit).abs(),left=left.next()),out.push(digit.toJSNumber())}return out.push(left.toJSNumber()),{value:out.reverse(),isNegative:neg}}function toBaseString(n,arr,alphabet){arr=toBase(n,arr);return(arr.isNegative?"-":"")+arr.value.map(function(x){return function(digit,alphabet){return digit<(alphabet=alphabet||DEFAULT_ALPHABET).length?alphabet[digit]:"<"+digit+">"}(x,alphabet)}).join("")}function parseStringValue(v){if(isPrecise(+v)){var text=+v;if(text===truncate(text))return supportsNativeBigInt?new NativeBigInt(BigInt(text)):new SmallInteger(text);throw new Error("Invalid integer: "+v)}var sign="-"===v[0],decimalPlace=(v=sign?v.slice(1):v).split(/e/i);if(2<decimalPlace.length)throw new Error("Invalid integer: "+decimalPlace.join("e"));if(2===decimalPlace.length){var exp=decimalPlace[1];if((exp=+(exp="+"===exp[0]?exp.slice(1):exp))!==truncate(exp)||!isPrecise(exp))throw new Error("Invalid integer: "+exp+" is not a valid exponent.");text=decimalPlace[0],decimalPlace=text.indexOf(".");if(0<=decimalPlace&&(exp-=text.length-decimalPlace-1,text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)),exp<0)throw new Error("Cannot include negative exponent part for integers");v=text+=new Array(exp+1).join("0")}if(!/^([0-9][0-9]*)$/.test(v))throw new Error("Invalid integer: "+v);if(supportsNativeBigInt)return new NativeBigInt(BigInt(sign?"-"+v:v));for(var r=[],max=v.length,l=LOG_BASE,min=max-l;0<max;)r.push(+v.slice(min,max)),(min-=l)<0&&(min=0),max-=l;return trim(r),new BigInteger(r,sign)}function parseValue(v){return"number"==typeof v?function(v){if(supportsNativeBigInt)return new NativeBigInt(BigInt(v));if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+" is not an integer.");return new SmallInteger(v)}return parseStringValue(v.toString())}(v):"string"==typeof v?parseStringValue(v):"bigint"==typeof v?new NativeBigInt(v):v}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)},SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)},NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix)},BigInteger.prototype.toString=function(radix,alphabet){if(10!==(radix=void 0===radix?10:radix))return toBaseString(this,radix,alphabet);for(var digit,v=this.value,l=v.length,str=String(v[--l]);0<=--l;)digit=String(v[l]),str+="0000000".slice(digit.length)+digit;return(this.sign?"-":"")+str},NativeBigInt.prototype.toString=SmallInteger.prototype.toString=function(radix,alphabet){return 10!=(radix=void 0===radix?10:radix)?toBaseString(this,radix,alphabet):String(this.value)},NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()},BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)},SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf=function(){return this.value},NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var i=0;i<1e3;i++)Integer[i]=parseValue(i),0<i&&(Integer[-i]=parseValue(-i));return Integer.one=Integer[1],Integer.zero=Integer[0],Integer.minusOne=Integer[-1],Integer.max=max,Integer.min=min,Integer.gcd=gcd,Integer.lcm=function(a,b){return a=parseValue(a).abs(),b=parseValue(b).abs(),a.divide(gcd(a,b)).multiply(b)},Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt},Integer.randBetween=function(a,range,low){a=parseValue(a),range=parseValue(range);var usedRNG=low||Math.random,low=min(a,range);if((range=max(a,range).subtract(low).add(1)).isSmall)return low.add(Math.floor(usedRNG()*range));for(var digits=toBase(range,BASE).value,result=[],restricted=!0,i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE,digit=truncate(usedRNG()*top);result.push(digit),digit<top&&(restricted=!1)}return low.add(Integer.fromArray(result,BASE,!1))},Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)},Integer}();void 0!==module&&module.hasOwnProperty("exports")&&(module.exports=bigInt)},{}],2:[function(require,module,exports){"use strict";var validate=require("./validation").validate,CHARSET_INVERSE_INDEX={q:0,p:1,z:2,r:3,y:4,9:5,x:6,8:7,g:8,f:9,2:10,t:11,v:12,d:13,w:14,0:15,s:16,3:17,j:18,n:19,5:20,4:21,k:22,h:23,c:24,e:25,6:26,m:27,u:28,a:29,7:30,l:31};module.exports={encode:function(data){validate(data instanceof Uint8Array,"Invalid data: "+data+".");for(var base32="",i=0;i<data.length;++i){var value=data[i];validate(0<=value&&value<32,"Invalid value: "+value+"."),base32+="qpzry9x8gf2tvdw0s3jn54khce6mua7l"[value]}return base32},decode:function(string){validate("string"==typeof string,"Invalid base32-encoded string: "+string+".");for(var data=new Uint8Array(string.length),i=0;i<string.length;++i){var value=string[i];validate(value in CHARSET_INVERSE_INDEX,"Invalid value: "+value+"."),data[i]=CHARSET_INVERSE_INDEX[value]}return data}}},{"./validation":5}],3:[function(validation,module,exports){"use strict";var base32=validation("./base32"),bigInt=validation("big-integer"),convertBits=validation("./convertBits"),validation=validation("./validation"),validate=validation.validate;var ValidationError=validation.ValidationError,VALID_PREFIXES=["tentslp","tentslptest","tentslpreg"];function prefixToUint5Array(prefix){for(var result=new Uint8Array(prefix.length),i=0;i<prefix.length;++i)result[i]=31&prefix[i].charCodeAt(0);return result}function concat(a,b){var ab=new Uint8Array(a.length+b.length);return ab.set(a),ab.set(b,a.length),ab}function polymod(data){for(var GENERATOR=[656907472481,522768456162,0xf33e5fb3c4,748107326120,130178868336],checksum=bigInt(1),i=0;i<data.length;++i)for(var value=data[i],topBits=checksum.shiftRight(35),checksum=checksum.and(34359738367).shiftLeft(5).xor(value),j=0;j<GENERATOR.length;++j)topBits.shiftRight(j).and(1).equals(1)&&(checksum=checksum.xor(GENERATOR[j]));return checksum.xor(1)}function hasSingleCase(string){return string===string.toLowerCase()||string===string.toUpperCase()}module.exports={encode:function(prefix,versionByte,payloadData){validate("string"==typeof prefix&&function(prefix){return hasSingleCase(prefix)&&-1!==VALID_PREFIXES.indexOf(prefix.toLowerCase())}(prefix),"Invalid prefix: "+prefix+"."),validate("string"==typeof versionByte,"Invalid type: "+versionByte+"."),validate(payloadData instanceof Uint8Array,"Invalid hash: "+payloadData+".");var payload=concat(prefixToUint5Array(prefix),new Uint8Array(1)),versionByte=function(type){switch(type){case"P2PKH":return 0;case"P2SH":return 8;default:throw new ValidationError("Invalid type: "+type+".")}}(versionByte)+function(hash){switch(8*hash.length){case 160:return 0;case 192:return 1;case 224:return 2;case 256:return 3;case 320:return 4;case 384:return 5;case 448:return 6;case 512:return 7;default:throw new ValidationError("Invalid hash size: "+hash.length+".")}}(payloadData),payloadData=(payloadData=concat(Uint8Array.of(versionByte),payloadData),convertBits(payloadData,8,5)),payload=concat(concat(payload,payloadData),new Uint8Array(8)),payload=concat(payloadData,function(checksum){for(var result=new Uint8Array(8),i=0;i<8;++i)result[7-i]=checksum.and(31).toJSNumber(),checksum=checksum.shiftRight(5);return result}(polymod(payload)));return prefix+":"+base32.encode(payload)},decode:function(address){validate("string"==typeof address&&hasSingleCase(address),"Invalid address: "+address+".");var versionByte=address.toLowerCase().split(":");validate(2===versionByte.length,"Missing prefix: "+address+".");var prefix=versionByte[0],hash=base32.decode(versionByte[1]);return validate(function(prefixData,payload){prefixData=concat(prefixToUint5Array(prefixData),new Uint8Array(1));return polymod(concat(prefixData,payload)).equals(0)}(prefix,hash),"Invalid checksum: "+address+"."),versionByte=hash.slice(0,-8),hash=convertBits(versionByte,5,8,!0),versionByte=hash[0],hash=hash.slice(1),validate(function(versionByte){switch(7&versionByte){case 0:return 160;case 1:return 192;case 2:return 224;case 3:return 256;case 4:return 320;case 5:return 384;case 6:return 448;case 7:return 512}}(versionByte)===8*hash.length,"Invalid hash size: "+address+"."),{prefix:prefix,type:function(versionByte){switch(120&versionByte){case 0:return"P2PKH";case 8:return"P2SH";default:throw new ValidationError("Invalid address type in version byte: "+versionByte+".")}}(versionByte),hash:hash}},ValidationError:ValidationError}},{"./base32":2,"./convertBits":4,"./validation":5,"big-integer":1}],4:[function(require,module,exports){"use strict";var validate=require("./validation").validate;module.exports=function(data,from,to,strictMode){for(var length=strictMode?Math.floor(data.length*from/to):Math.ceil(data.length*from/to),mask=(1<<to)-1,result=new Uint8Array(length),index=0,accumulator=0,bits=0,i=0;i<data.length;++i){var value=data[i];for(validate(0<=value&&value>>from==0,"Invalid value: "+value+"."),accumulator=accumulator<<from|value,bits+=from;to<=bits;)bits-=to,result[index]=accumulator>>bits&mask,++index}return strictMode?validate(bits<from&&0==(accumulator<<to-bits&mask),"Input cannot be converted to "+to+" bits without padding, but strict mode was used."):0<bits&&(result[index]=accumulator<<to-bits&mask,++index),result}},{"./validation":5}],5:[function(require,module,exports){"use strict";function ValidationError(message){var error=new Error;this.name=error.name="ValidationError",this.message=error.message=message,this.stack=error.stack}ValidationError.prototype=Object.create(Error.prototype),module.exports={ValidationError:ValidationError,validate:function(condition,message){if(!condition)throw new ValidationError(message)}}},{}]},{},[3])(3)});
